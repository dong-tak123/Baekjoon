# -*- coding: utf-8 -*-
"""백준 15686 (치킨 배달)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kqMSMrCB_meVfnrq1ID3Llcz01RtutiD

- 1 : 집 / 2 : 치킨집

- 치킨거리 : manhatten norm

- M개의 치킨집을 골랐을 때, 최소의 치킨거리를 구하라
"""

from itertools import combinations
#치킨 거리 계산
def dist(x, y):
    return abs(x[0]-y[0]) + abs(x[1]-y[1])

N, M = map(int, input().split())
city = []
for _ in range(N):
    city.append(list(map(int, input().split())))
house = []
store = []

#집과 가게 위치 확인
for i in range(N):
    for j in range(N):
        if city[i][j] == 1:
            house.append((i, j))
        elif city[i][j] == 2:
            store.append((i, j))

#집을 기준으로 모든 치킨 가게까지의 거리중에서 최솟값이 치킨거리
min_dist = float("inf")

#M개를 뽑아서 모든 가게의 경우의 수 마다 최소 치킨거리를 잰다
for stores in list(combinations(store, M)):
    sum_dist = 0        #뽑힌 가게들로 만든 최소 치킨거리
    for home in house:
        sum_dist += min([dist(home, s) for s in stores])
        if min_dist <= sum_dist:    #시간초과 방지..
            break
    if sum_dist < min_dist:
        min_dist = sum_dist

print(min_dist)