# -*- coding: utf-8 -*-
"""백준 1759 (암호 만들기)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fwR3VZbnnneFnD3OGB4UUKuXnFnPqOzi

- L : L개의 알파벳으로 암호 만듦
- C : C개의 후보들..
- 아래에 모든 후보들

최소 한 개의 모음과 최소 두 개의 자음

#풀이

- 일단 오름차순이어야 한다. -> 입력 자체를 정렬한다
- 조합으로 리스트를 만들어서 뽑힐 때마다 모음 갯수 자음 갯수 확인한다
"""

from itertools import combinations

L, C = map(int, input().split())
a = list(map(str, input().split()))
moeum = ['a', 'e', 'i', 'o', 'u']

possible = []
for cands in list(combinations(sorted(a), L)):      #조합에서 하나씩 뽑아온다
    moeum_cnt = 0
    jaeum_cnt = 0
    for c in cands:
        if c in moeum:
            moeum_cnt += 1
        else:
            jaeum_cnt += 1
        
        #자음 모음 갯수 확인만되면 된거임
        if (moeum_cnt > 0) and (jaeum_cnt > 1):
            possible.append("".join(cands))
            break

for p in possible:
    print(p)