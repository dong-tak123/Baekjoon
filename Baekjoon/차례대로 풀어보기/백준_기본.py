# -*- coding: utf-8 -*-
"""백준 기본

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ScYhHQapBqOJkds3qeYS1iLOeIlo4ayz
"""

a, b = map(int, input().split())
print(a+b)
print(a-b)
print(a*b)
print(a/b)
print(a%b)

a,b,c = map(int, input().split())

print((a+b)%c)
print(((a%c) + (b%c))%c)
print((a*b)%c)
print(((a%c)*(b%c))%c)

a = int(input())
b = int(input())
sum=a*b
while (b>0):
    print(a*(b%10))
    b = b//10
print(sum)

print("\    /\\")
print(" )  ( ')")
print("(  /  )")
print(" \(__)|")

print('|\\_/|')
print('|q p|   /}')
print('( 0 )"""\\')
print('|"^"`    |')
print('||_/=\\\\__|')

"""if문"""

a,b = map(int, input().split())

if a<b:
    print("<")
elif a==b:
    print("==")
else:
    print(">")

score = int(input())

if score>=90 :
    print("A")
elif score>=80:
    print("B")
elif score>=70:
    print("C")
elif score>=60:
    print("D")
else:
    print("F")

year = int(input())

if (((year%4 == 0) and (year%100 != 0)) or (year%400 == 0)):
    print("1")
else:
    print("0")

x = int(input())
y = int(input())

if x*y>0:
    if x>0:
        print("1")
    else:
        print("3")
else:
    if x>0:
        print("4")
    else:
        print("2")

h, m = map(int, input().split())

if m>=45:
    print(h, m-45)
else:
    if h==0:
        print(23, m+15)
    else:
        print(h-1, m+15)

"""for"""

N = int(input())

for i in range(1,10):
    print(f"{N} * {i} = {N*i}")

T = int(input())

for _ in range(T):
    a, b = map(int, input().split())
    print(a+b)

n = int(input())
print(n*(n+1)//2)

n = int(input())

for i in range(1,n+1):
    print(i)

n = int(input())

for i in range(1,n+1):
    print(n-i+1)

T = int(input())
for i in range(T):
    a, b = map(int, input().split())
    print(f"Case #{i+1}: {a+b}")

T = int(input())
for i in range(T):
    a, b = map(int, input().split())
    print(f"Case #{i+1}: {a} + {b} = {a+b}")

"""while문"""

while True:
    try:
        a,b = map(int, input().split())
        print(a+b)
    except:
        break

"""문자열"""

letter = input()
print(ord(letter))

T = int(input())

for _ in range(T):
    r, s = input().split()
    r = int(r)
    for i in s:
        print(i*r, end="")
    print()

a, b = map(str, input().split())

a, b = int(a[::-1]), int(b[::-1])
if a>b:
    print(a)
else:
    print(b)

dial={"A":3,"D":4,"G":5,"J":6,"M":7,"P":8,"S":8,"V":9,"Y":10,
      "B":3,"E":4,"H":5,"K":6,"N":7,"Q":8,"T":9,"W":10,"Z":10,
      "C":3,"F":4,"I":5,"L":6,"O":7,"R":8,"U":9,"X":10}
    
letter = input()
sum=0
for i in letter:
    sum += dial[i]
print(sum)

"""기본수학 1"""

#2839
N = int(input())
box = 0

#남은 설탕이 5의 배수가 될때까지 3을 뺀다..
while N>=0:
    if N%5 == 0:
        box += N//5
        break
    N -= 3
    box += 1
if N%5 != 0:
    print(-1)
else:
    print(box)

"""기본수학 2"""

point_x = {}
point_y = {}

for i in range(1, 4):
    a, b = map(int, input().split())
    if a in point_x:
        point_x[a] += 1
    else:
        point_x[a] = 1
    if b in point_y:
        point_y[b] += 1
    else:
        point_y[b] = 1

for i in point_x:
    if point_x[i] == 1:
        print(i, end=" ")
        break
for i in point_y:
    if point_y[i] == 1:
        print(i, end=" ")
        break

#4153

while True:
    nums = list(map(int, input().split()))
    if nums[0] == 0:
        break
    else:
        nums.sort()
        if nums[0]**2 + nums[1]**2 == nums[2]**2:
            print("right")
        else:
            print("wrong")

"""재귀"""

#10872 팩토리얼

def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n-1)

N = int(input())
print(factorial(N))

#2447 별찍기-10

def star(N):
    if N == 3:
        

N = int(input())

#11729 하노이 탑 이동 순서

"""브루트포스 알고리즘"""

#2798 블랙잭

from itertools import combinations
N, M = map(int, input().split())
cards = list(map(int, input().split()))
cards.sort()

nums = list(combinations(cards, 3))[::-1]
wts = []
for i in nums:
    if sum(i) <= M:
        wts.append(sum(i))
print(max(wts))

#2231 분해합

def making(N):
    sum = N
    for i in str(N):
        sum += int(i)
    return sum

N = int(input())
found = False
initial = 1
while initial < 1000001:
    if making(initial) == N:
        found = True
        break
    else:
        initial += 1
if found:
    print(initial)
else:
    print(0)

#2231 분해합
#무지성으로 수식 계산.. (시간 개빠름..)

n = int(input())

def check():
    for a1 in range(10):
        for a2 in range(10):
            for a3 in range(10):
                for a4 in range(10):
                    for a5 in range(10):
                        for a6 in range(10):
              #현재 상태의 분해합을 temp에 계산..
temp = a1*100001+a2*10001+a3*1001+a4*101+a5*11+a6*2
              #분해합이 같으면 리턴..
              if temp == n:
                return a1*100000+a2*10000+a3*1000+a4*100+a5*10+a6*1
  return 0

print(check())

#7568번 덩치

N = int(input())

id = []
score = [1 for x in range(N)]
for _ in range(N):
    id.append(list(map(int, input().split())))

for i in range(N):
    for j in range(N):
        if id[i][0] > id[j][0] and id[i][1] > id[j][1]:
            score[j] += 1

for k in score:
    print(k, end=" ")

"""백트래킹"""

#15650 N과 M(2)

from itertools import combinations

N, M = map(int, input().split())
nums = range(1, N+1)

for i in list(combinations(nums, M)):
    for j in i:
        print(j, end=" ")
    print()

#15651 N과 M(3) itertools.product(, repeat=..)
#중복순열..

from itertools import product

N, M = map(int, input().split())
nums = range(1, N+1)

for i in list(product(nums, repeat = M)):
    for j in i:
        print(j, end=" ")
    print()

#재귀 사용..

N, M = map(int, input().split())

numbers = []

def NnM():
    if len(numbers) == M:
        print(" ".join(map(str, numbers)))
        return
    
    for i in range(1, N+1):
        numbers.append(i)
        print(numbers)
        NnM()
        numbers.pop()
NnM()

#15652 N과 M(4)

from itertools import combinations_with_replacement

N, M = map(int, input().split())
nums = range(1, N+1)
for i in list(combinations_with_replacement(nums, M)):
    for j in i:
        print(j, end=" ")
    print()

N, M = map(int, input().split())
numbers = []

#다시 뽑을때 자기보다 큰걸 뽑아야한다.. 인자를 주면 됨!
def NnM(k):
    if len(numbers) == M:
        print(' '.join(map(str, numbers)))
        return
    for i in range(k, N+1):
        numbers.append(i)
        NnM(i)
        numbers.pop()
NnM(1)

#14888 연산자 끼워넣기
from itertools import permutations

N = int(input())
nums = list(map(int, input()))
add, sub, mul, div = map(int, input())
calcul = ["+" for _ in range(add)] + ["-" for _ in range(add)] +
            ["*" for _ in range(add)] + ["/" for _ in range(add)]
result = []

for i in list(permutations(calcul, N-1)):
    res = nums[0]
    for j in range(N-1):
        if i[j] == "+":
            res += nums[j+1]
        elif i[j] == "-":

#14889 스타트와 링크
from itertools import combinations

N = int(input())
chemy = []
result = []
for _ in range(N):
    chemy.append(list(map(int, input().split())))

member = range(N)
#뽑히면 start라고 생각..
for i in list(combinations(member, N//2)):
    start = list(i)
    link = list(set(member).difference(set(start)))
    
    start_sum, link_sum = 0, 0
    for j in list(combinations(start, 2)):
        start_sum += (chemy[j[0]][j[1]] + chemy[j[1]][j[0]]) 
    for j in list(combinations(link, 2)):
        link_sum += (chemy[j[0]][j[1]] + chemy[j[1]][j[0]])
    result.append(abs(link_sum-start_sum))

print(min(result))

"""정수론 및 조합론"""

#5086 배수와 약수

def check(x, y):
    if x % y == 0:
        print("multiple")
    elif y % x == 0:
        print("factor")
    else:
        print("neither")

while True:
    a, b = map(int, input().split())
    if a == 0:
        break
    check(a, b)

#2981 검문

N = int(input())
nums = []
for _ in range(N):
    nums.append(int(input()))
#정렬까지 마침..
nums.sort()
for k in range(nums[0]):

#3036 링

def gcd(a, b):
    while (b>0):
        a, b = b, a%b
    return a

def giyak(a, b):
    GCD = gcd(a, b)
    print(f"{a//GCD}/{b//GCD}")

N = int(input())
rings = list(map(int, input().split()))
for i in range(1, N):
    giyak(rings[0], rings[i])

def gcd(a, b):
    while (b>0):
        a, b = b, a%b
    return a

gcd(21,15)

#11050 이항 계수 1

N, K = map(int, input().split())

bunja = 1
bunmo = 1
for i in range(N, N-K, -1):
    bunja *= i
for i in range(1, K+1):
    bunmo *= i

print(bunja//bunmo)

#11051 이항 계수 2

N, K = map(int, input().split())

bunja = 1
bunmo = 1
if K > N - K:
    K = N - K

for i in range(N, N-K, -1):
    bunja *= i
for i in range(1, K+1):
    bunmo *= i

print((bunja//bunmo)%10007)

