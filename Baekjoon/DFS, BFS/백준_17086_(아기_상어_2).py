# -*- coding: utf-8 -*-
"""백준 17086 (아기 상어 2)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lhwRiFYbJmQduAjOojpixyzBIAtX77Nj

상어를 일단 모두 q에 넣어놓고 bfs..
"""

def bfs(x, y):
    while q:
        tx, ty = q.popleft()
        for p in range(8):
            nx = tx + dx[p]
            ny = ty + dy[p]

            if (0<=nx<row) and (0<=ny<col) and (not sea[nx][ny]):
                sea[nx][ny] = sea[tx][ty] + 1
                q.append([nx, ny])

from collections import deque
row, col = map(int, input().split())
dx = [1, 1, 1, -1, -1, -1, 0, 0]
dy = [1, -1, 0, 1, -1, 0, 1, -1]
sea = []
q = deque()
for i in range(row):
    sea.append(list(map(int, input().split())))
    for j in range(col):
        if sea[i][j] == 1:
            q.append([i, j])

bfs(i, j)

#2차원 배열에서 최댓값 찾기
print(max(map(max, sea)) - 1)