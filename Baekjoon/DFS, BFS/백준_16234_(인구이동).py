# -*- coding: utf-8 -*-
"""백준 16234 (인구이동)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w6y9Ow9twSeGCVrBMAmpzdlYi3V3sFUH
"""

#pypy3로 제출해야 시간초과 해결

from collections import deque

def bfs(sx, sy):
    q = deque()
    team = deque()       #국경 열린 곳
    q.append([sx, sy])
    team.append([sx, sy])
    visited[sx][sy] = True
    total_sum = arr[sx][sy]

    while q:
        tx, ty = q.popleft()
        for p in range(4):
            nx = tx + dx[p]
            ny = ty + dy[p]
            if 0<=nx<n and 0<=ny<n and not visited[nx][ny]:
                if l <= abs(arr[nx][ny] - arr[tx][ty]) <= r:
                    team.append([nx, ny])
                    q.append([nx, ny])
                    visited[nx][ny] = True
                    total_sum += arr[nx][ny]
    
    final_popularity = total_sum // len(team)

    for team_x, team_y in team:
        arr[team_x][team_y] = final_popularity

    if len(team) >= 2:
        return True
    else:
        return False


n, l, r = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(n)]
dx = [1, -1, 0, 0]
dy = [0, 0, 1, -1]
res = 0

while True:
    visited = [[False] * n for _ in range(n)]
    moved_flag = False
    for i in range(n):
        for j in range(n):
            if not visited[i][j]:
                if bfs(i, j):
                    moved_flag = True

    if moved_flag:
        res += 1
    else:
        break
print(res)