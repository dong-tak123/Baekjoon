# -*- coding: utf-8 -*-
"""백준 1325 효율적인 해킹

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lg5qvQ5aOHM475FpEYq2FQQD3q4yUGhP

#파이썬 시간초과..

-> pypy3로 통과
"""

from collections import deque

def bfs(start):
    cnt = 1
    q = deque()
    q.append(start)
    visited[start] = True
    while q:
        rear = q.popleft()
        for p in trust[rear]:
            if not visited[p]:
                q.append(p)
                visited[p] = True
                cnt += 1
    
    return cnt  

n, m = map(int, input().split())
trust = [[] for _ in range(n+1)]
for _ in range(m):
    a, b = map(int, input().split())
    
    #반대로 연결을 시켜야함
    trust[b].append(a)

hackable = [] * (n+1)
for i in range(1, n+1):
    visited = [False] * (n+1)
    hackable[i] = [i]
    hackable[i].append(bfs(i))


print(*b)