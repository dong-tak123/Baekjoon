# -*- coding: utf-8 -*-
"""백준 1697 (숨바꼭질)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TYdvFar2Ie3NJIbPCLmjTLDgh8C1oOYK

수빈 : N, 동생 : K

수빈이는 x에서 x-1, x+1 혹은 2x로 갈 수 있다..

수빈이가 동생을 찾을 수 있는 가장 빠른 시간을 구하라
"""

from collections import deque

def bfs(start, dist, k):
    queue = deque([start])
    while queue:
        rear = queue.popleft()

        #목적지면 종료
        #목적지랑 출발지가 같으면 여기서 바로 0으로 끝난다..
        if rear == k:
            print(dist[k])
            break
        
        #시작점부터 1초 뒤에 갈 수 있는 곳에 대해서 계속 거리를 늘려줌
        for i in (rear-1, rear+1, 2*rear):
            #print(i)
            #중복해서 더해질수도 있으니까 계산이 안되어있던 점을 추가해 줘야함..
            if (0 <= i <= max) and (dist[i] == 0):
                queue.append(i)
                dist[i] = dist[rear] + 1

max = 100000
n, k = map(int, input().split())

dist = [0] * (max+1)

bfs(n, dist, k)