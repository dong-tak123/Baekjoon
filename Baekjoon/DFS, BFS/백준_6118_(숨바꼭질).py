# -*- coding: utf-8 -*-
"""백준 6118 (숨바꼭질)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mLRU826KDy0mGo7bHLGqyBChcs7eYwAp
"""

from collections import deque

def bfs(start):
    q = deque()
    q.append(start)
    while q:
        rear = q.popleft()
        for next in graph[rear]:
            if dist[next] == 0:
                q.append(next)
                dist[next] = dist[rear] + 1
    dist[start] = -1            

n, m = map(int, input().split())

graph = [[] for _ in range(n+1)]
for _ in range(m):
    a, b = map(int, input().split())
    graph[a].append(b)
    if a not in graph[b]:
        graph[b].append(a)

dist = [0] * (n+1)
bfs(1)

M = max(dist)
idx = dist.index(M)
dist.sort(reverse=True)
cnt = 0
for p in dist:
    if p < M:
        break
    else:
        cnt += 1
print(idx, M, cnt)