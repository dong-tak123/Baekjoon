# -*- coding: utf-8 -*-
"""백준 1303 (전쟁 - 전투)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dJN28LaOpJ5JsZzPnO6_zX_kKZyhBm6T

- N명이 뭉쳐있으면 $N^2$의 병력이 됨
- W가 우리팀, B가 적군
- 우리 팀과 적군의 위력을 각각 출력

#풀이

- bfs에서 인접병력을 계산한다
- col, row 순으로 입력이 들어온다..
"""

from collections import deque

def bfs(x, y):
    q = deque()
    q.append([x, y])
    visited[x][y] = True
    near = 0
    while q:
        tx, ty = q.popleft()
        for p in range(4):
            nx = tx + dx[p]
            ny = ty + dy[p]
            if (0<=nx<row) and (0<=ny<col) and (not visited[nx][ny]):
                if war[tx][ty] == war[nx][ny]:
                    near += 1
                    visited[nx][ny] = True
                    q.append([nx, ny])
    return near + 1

col, row = map(int, input().split())
dx = [1, -1, 0, 0]
dy = [0, 0, 1, -1]
war = []
team = []
enemy = []
visited = [[False]*col for _ in range(row)]

for _ in range(row):
    war.append(list(input()))

for i in range(row):
    for j in range(col):
        if not visited[i][j]:
            if war[i][j] == 'W':
                team.append(bfs(i, j) ** 2)
            else:
                enemy.append(bfs(i, j) ** 2)

print(sum(team), sum(enemy))